
import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author s.fathalla
 */
public class MainClass extends javax.swing.JFrame {

    DefaultListModel model = new DefaultListModel();
    boolean addTypeCommentFlag; // to add comment of AddType part once
    boolean generateBtnIsClicked; // to check whether the generate button clicked once

    JFileChooser fileChooser = new JFileChooser();
    File file;

    public MainClass() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        jList1.setModel(model);
        model.addElement("RewriteEngine on");
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        for (Component cp : jPanel1.getComponents()) { // disable all panel1 components
            cp.setEnabled(false);
        }
        for (Component cp : jPanel3.getComponents()) { // disable all panel3 components
            cp.setEnabled(false);
        }

        jLabel10.setText("<html><a href='http://www.htaccesscheck.com/'>" + "http://www.htaccesscheck.com/" + "</a></html>");

        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jList1.setCellRenderer(new WhiteYellowCellRenderer()); // format comments in JList 

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldPURL = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldAdvURL = new javax.swing.JTextField();
        jComboBoxRDFTypes = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jCheckBoxSubdirAdd = new javax.swing.JCheckBox();
        jButton8 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jTextFieldAddUpDel = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButtonOpen = new javax.swing.JButton();
        jButtonCopy = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jCheckBoxsubdirEnable = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldSubdirPrefix = new javax.swing.JTextField();
        jTextFieldSubdirURL = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPrefix = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDefault = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCheckBoxPreventListing = new javax.swing.JCheckBox();
        jCheckBoxPreventView = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HTAGen- a .htaccess Generator");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "RewriteEngine on", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel1.setText("Your PURL");

        jTextFieldPURL.setEditable(false);
        jTextFieldPURL.setText("https://purl.hmc-services.de/");
        jTextFieldPURL.setToolTipText("your complete PURL is here");
        jTextFieldPURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPURLActionPerformed(evt);
            }
        });

        jLabel4.setText("Your .htaccess file preview");

        jButton2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton2.setText("Export");
        jButton2.setToolTipText("Export generated .htaccess file to disk");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N
        jPanel1.setEnabled(false);
        jPanel1.setName(""); // NOI18N

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel5.setText("Resource URL");

        jTextFieldAdvURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAdvURLActionPerformed(evt);
            }
        });

        jComboBoxRDFTypes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RDF/XML", "TTL", "JSON/LD", "OWL", "N-triples", "N3", "HTML" }));

        jButton6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jCheckBoxSubdirAdd.setText("For sundirectory");

        jButton8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton8.setText("Clear");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(jTextFieldAdvURL, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxRDFTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxSubdirAdd)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(27, 27, 27)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton6, jButton8});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jCheckBoxSubdirAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAdvURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxRDFTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton8))
                .addContainerGap())
        );

        jCheckBox1.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jCheckBox1.setText("Advanced (enable content negotiation)");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextFieldAddUpDel.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jTextFieldAddUpDel.setText("Select a line to update or delete...");
        jTextFieldAddUpDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAddUpDelActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel6.setText("Update generated file (by lines)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldAddUpDel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(200, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton3, jButton4, jButton5});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldAddUpDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton3, jButton4, jButton5});

        jButtonOpen.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButtonOpen.setText("Open  File");
        jButtonOpen.setToolTipText("Open the generated .htaccess file");
        jButtonOpen.setEnabled(false);
        jButtonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenActionPerformed(evt);
            }
        });

        jButtonCopy.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButtonCopy.setText("Copy");
        jButtonCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCopyActionPerformed(evt);
            }
        });

        jLabel9.setText("Syntax has been checked by ");

        jLabel10.setText("http://www.htaccesscheck.com/ ");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jCheckBoxsubdirEnable.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jCheckBoxsubdirEnable.setText("Subdirectory resource(s)");
        jCheckBoxsubdirEnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxsubdirEnableActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel11.setText("Prefix");

        jLabel12.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel12.setText("Resource URL");

        jTextFieldSubdirPrefix.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSubdirPrefixKeyReleased(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton7.setText("Add");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton9.setText("Clear");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldSubdirPrefix)
                    .addComponent(jTextFieldSubdirURL, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(291, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(183, 183, 183))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton7, jButton9});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldSubdirPrefix, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldSubdirURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton9))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel2.setText("Ontology prefix");
        jLabel2.setToolTipText("The part of a PURL that comes after the domain, usually lowercase, e.g.foaf");

        jTextFieldPrefix.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPrefixKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jLabel7.setText("E.g. foaf ");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel3.setText("Default response ");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jLabel8.setText("e.g. http://example.com/resource.rdf");

        jCheckBoxPreventListing.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jCheckBoxPreventListing.setText("Prevent Directory Listing");

        jCheckBoxPreventView.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jCheckBoxPreventView.setText("Prevent viewing of .htaccess file ");

        jButton1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton1.setText("Generate");
        jButton1.setToolTipText("Generate the .htaccess file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDefault)
                    .addComponent(jTextFieldPrefix)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jCheckBoxPreventView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxPreventListing)
                .addGap(45, 45, 45))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDefault, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(21, 21, 21)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxPreventListing)
                    .addComponent(jCheckBoxPreventView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCheckBox1)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBoxsubdirEnable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jButtonOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(61, 61, 61)
                .addComponent(jTextFieldPURL, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCopy, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(259, 259, 259))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel1, jPanel2, jPanel3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldPURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCopy))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxsubdirEnable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, jButtonOpen});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldPURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPURLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPURLActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:

        if (evt.getValueIsAdjusting() == false) {
            jTextFieldAddUpDel.setText(jList1.getSelectedValue());
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // udate
        int ind = jList1.getSelectedIndex();
        if (ind >= 0)
            model.setElementAt(jTextFieldAddUpDel.getText(), ind);
        else
            JOptionPane.showMessageDialog(rootPane, "You have to select an item first", "Error", HEIGHT);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // ADD
        if (!jTextFieldAddUpDel.getText().equals("")) {
            model.addElement(jTextFieldAddUpDel.getText());
        } else {
            JOptionPane.showMessageDialog(rootPane, "You have to enter text first", "Error", HEIGHT);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Delete

        int ind = jList1.getSelectedIndex();
        if (ind >= 0) {
            model.removeElementAt(ind);
        } else {
            JOptionPane.showMessageDialog(rootPane, "You have to select an item first", "Error", HEIGHT);
        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        for (Component cp : jPanel1.getComponents()) {
            if (cp.isEnabled()) {
                cp.setEnabled(false);
            } else {
                cp.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Add in advanced
        if (!generateBtnIsClicked) {
            JOptionPane.showMessageDialog(null, "You have to generate the file first by pressing Generate Button!", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (!jCheckBoxSubdirAdd.isSelected()) // in case no subdirectory no prefix
        {
            addContentNegotiation("", jTextFieldAdvURL.getText());
        } else if (!jTextFieldSubdirPrefix.getText().equals("")) {
            addContentNegotiation(jTextFieldSubdirPrefix.getText(), jTextFieldAdvURL.getText());
        } else {
            JOptionPane.showMessageDialog(null, "You have to enter subdirectory prefix!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_jButton6ActionPerformed


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PrintWriter pw = null;
        try {
            // Export
            fileChooser.setDialogTitle("Specify a file to save");
            fileChooser.setSelectedFile(new File(".htaccess"));
            int userSelection = fileChooser.showSaveDialog(this);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
//                File fileToSave = fileChooser.getSelectedFile();
//                System.out.println("Save as file: " + fileToSave.getAbsolutePath());

//            File f = new File("/home/s.fathalla/NetBeansProjects/htaccess/.htaccess");
                file = fileChooser.getSelectedFile();
                if (file.exists()) {
                    int response = JOptionPane.showConfirmDialog(null, //
                            "Do you want to replace the existing file?", //
                            "Confirm", JOptionPane.YES_NO_OPTION, //
                            JOptionPane.QUESTION_MESSAGE);
                    if (response != JOptionPane.YES_OPTION) {
                        return;
                    }
                }

                pw = new PrintWriter(new OutputStreamWriter(new FileOutputStream(file), "UTF-8"));
                try {
                    int len = model.getSize();
                    for (int i = 0; i < len; i++) {
                        pw.println(model.getElementAt(i).toString());
                    }
                    jButtonOpen.setEnabled(true);
                } catch (Exception e) {

                } finally {
                    pw.close();
                }
            }// if userSelection

        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainClass.class.getName()).log(Level.SEVERE, null, ex);

        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(MainClass.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Generate
        int reply;

        if (jTextFieldPrefix.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "You have to enter a prefix first!", "Information", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldPrefix.requestFocusInWindow();
            return;
        }

        if (generateBtnIsClicked) { // click generate for the 2nd time
            reply = JOptionPane.showConfirmDialog(null, "You are about to re-generate the whole file. Your modifications will be lost. Do you want to continue?", "Information", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.NO_OPTION) {
                return;
            }

        }
        generateBtnIsClicked = true;
        model.clear();
        addTypeCommentFlag = false;
        model.addElement("# " + jTextFieldPURL.getText());
        model.addElement("Options +FollowSymLinks");
        model.addElement(" ");
        model.addElement(" ");
        model.addElement("RewriteEngine on");
        model.addElement(" ");
        model.addElement("# Default Redirect");
        model.addElement("RewriteRule ^$ " + jTextFieldDefault.getText() + "  [R=303,L]");
        if (jCheckBoxPreventView.isSelected()) {
            model.addElement(" ");
            model.addElement("#Prevent viewing of .htaccess file ");
            model.addElement("<Files .htaccess> ");
            model.addElement("order allow,deny ");
            model.addElement("deny from all ");
            model.addElement("</Files> ");
        }
        if (jCheckBoxPreventListing.isSelected()) {
            model.addElement(" ");
            model.addElement("#Prevent directory listings");
            model.addElement("Options All -Indexes");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldPrefixKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPrefixKeyReleased
        // TODO add your handling code here:
//        
//        String s=jTextField1.getText();
        String s2 = jTextFieldPrefix.getText();
//        char c=evt.getKeyChar();
//        
//        if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE && !s.equals("https://purl.hmc-services.de/"))
//        { s=s.substring(0, s.length() - 1);
//        jTextField1.setText(s);
//        }
//        else if(Character.isAlphabetic(c))

        jTextFieldPURL.setText("https://purl.hmc-services.de/" + s2);
    }//GEN-LAST:event_jTextFieldPrefixKeyReleased

    private void jTextFieldAdvURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAdvURLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAdvURLActionPerformed

    private void jButtonOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenActionPerformed
        try {
            // TODO add your handling code here:

            Desktop.getDesktop().open(file);
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, "file not found", "Error", JOptionPane.ERROR_MESSAGE);

        } catch (IOException ex) {
            // Logger.getLogger(MainClass.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonOpenActionPerformed

    private void jButtonCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCopyActionPerformed
        // copy
        StringSelection stringSelection = new StringSelection(jTextFieldPURL.getText());
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);

    }//GEN-LAST:event_jButtonCopyActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // mouse click open link:
//        try {
//         
//        //Desktop.getDesktop().browse(new URI("http://www.htaccesscheck.com/"));
//         
//    } catch (IOException | URISyntaxException e1) {
//        e1.printStackTrace();
//    }
        try {
            if (System.getProperty("os.name").equals("Linux")) {
                // Workaround for Linux because "Desktop.getDesktop().browse()" doesn't work on some Linux implementations
                if (Runtime.getRuntime().exec(new String[]{"which", "xdg-open"}).getInputStream().read() != -1) {
                    Runtime.getRuntime().exec(new String[]{"xdg-open", "http://www.htaccesscheck.com/"});
                }
            } else if (Desktop.isDesktopSupported()) {
//                System.out.println(System.getProperty("os.name"));
                Desktop.getDesktop().browse(new URI("http://www.htaccesscheck.com/"));
            }

        } catch (IOException | URISyntaxException e) {

        }

    }//GEN-LAST:event_jLabel10MouseClicked

    private void jCheckBoxsubdirEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxsubdirEnableActionPerformed

        // enable/disable contents in Jpanel3
        for (Component cp : jPanel3.getComponents()) {
            if (cp.isEnabled()) {
                cp.setEnabled(false);
            } else {
                cp.setEnabled(true);
            }
        }
        jTextFieldSubdirPrefix.requestFocusInWindow();
    }//GEN-LAST:event_jCheckBoxsubdirEnableActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Add subdirectory
        if (jTextFieldSubdirPrefix.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "You have to enter a prefix first!", "Information", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldSubdirPrefix.requestFocusInWindow();
            return;
        }
        if (!generateBtnIsClicked) {
            JOptionPane.showMessageDialog(null, "You have to generate the file first by pressing Generate Button!", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        model.insertElementAt("# " + jTextFieldPURL.getText() + "/" + jTextFieldSubdirPrefix.getText(), 1);
        model.addElement(" ");
        model.addElement("# Rewrite rule to " + jTextFieldSubdirPrefix.getText() + " ontology at " + jTextFieldPURL.getText() + "/" + jTextFieldSubdirPrefix.getText());
        model.addElement("RewriteRule ^" + jTextFieldSubdirPrefix.getText() + "$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
        model.addElement("RewriteRule ^" + jTextFieldSubdirPrefix.getText() + "/$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
        model.addElement("RewriteRule ^" + jTextFieldSubdirPrefix.getText() + "/(.*)$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");


    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextFieldSubdirPrefixKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSubdirPrefixKeyReleased
        // add the prefix to subdirectory checkbox at content negotiation

        String prefixStr = jTextFieldSubdirPrefix.getText();
        jCheckBoxSubdirAdd.setText("For sundirectory (" + prefixStr + ")");


    }//GEN-LAST:event_jTextFieldSubdirPrefixKeyReleased

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // clear advURL textbox
        jTextFieldAdvURL.setText("");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        jTextFieldSubdirPrefix.setText("");
        jTextFieldSubdirURL.setText("");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextFieldAddUpDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAddUpDelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAddUpDelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainClass().setVisible(true);
            }
        });
    }

    void addContentNegotiation(String prefix, String url) {

        if (!addTypeCommentFlag) { // add comment for appropriate content type
            model.insertElementAt("# Directive to ensure *.rdf files served as appropriate content type", 3);
            addTypeCommentFlag = true;
        }

        if (jComboBoxRDFTypes.getSelectedItem().toString().equals("RDF/XML")) {
            if (!model.contains("AddType application/rdf+xml .rdf")) {
                model.insertElementAt("AddType application/rdf+xml .rdf", 4);
            }
            model.addElement(" ");
            model.addElement("# Rewrite rule to serve RDF/XML content from the vocabulary URI if requested ");
            model.addElement("RewriteCond %{HTTP_ACCEPT} application/rdf\\+xml ");
            model.addElement("RewriteRule ^" + prefix + "$ " + url + "  [R=303,L]");
            if(!prefix.equals("")){
                model.addElement("RewriteRule ^" + prefix + "/$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
                model.addElement("RewriteRule ^" + prefix + "/(.*)$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
            }
            
        } else if (jComboBoxRDFTypes.getSelectedItem().toString().equals("TTL")) {
            if (!model.contains("AddType text/turtle .ttl")) {
                model.insertElementAt("AddType text/turtle .ttl", 4);
            }
            model.addElement(" ");
            model.addElement("# Rewrite rule to serve TTL content from the vocabulary URI if requested");
            model.addElement("RewriteCond %{HTTP_ACCEPT} text/turtle [OR]");
            model.addElement("RewriteCond %{HTTP_ACCEPT} \\*/turtle ");
            model.addElement("RewriteRule ^" + prefix + "$ " + url + "  [R=303,L]");
            if(!prefix.equals("")){
                model.addElement("RewriteRule ^" + prefix + "/$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
                model.addElement("RewriteRule ^" + prefix + "/(.*)$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
            }

        } else if (jComboBoxRDFTypes.getSelectedItem().toString().equals("JSON/LD")) {
            if (!model.contains("AddType application/ld+json .json")) {
                model.insertElementAt("AddType application/ld+json .json", 4);
            }
            model.addElement(" ");
            model.addElement("# Rewrite rule to serve JSON-LD content from the vocabulary URI if requested");
            model.addElement("RewriteCond %{HTTP_ACCEPT} application/ld\\+json");
            model.addElement("RewriteRule ^" + prefix + "$ " + url + "  [R=303,L]");
            if(!prefix.equals("")){
                model.addElement("RewriteRule ^" + prefix + "/$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
                model.addElement("RewriteRule ^" + prefix + "/(.*)$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
            }
        } else if (jComboBoxRDFTypes.getSelectedItem().toString().equals("OWL")) {
            if (!model.contains("AddType application/rdf+xml .owl")) {
                model.insertElementAt("AddType application/rdf+xml .owl", 4);
            }
            model.addElement(" ");
            model.addElement("# Rewrite rule to serve OWL content from the vocabulary URI if requested ");
            model.addElement("RewriteCond %{HTTP_ACCEPT} application/rdf\\+xml ");
            model.addElement("RewriteRule ^" + prefix + "$ " + url + "  [R=303,L]");
            if(!prefix.equals("")){
                model.addElement("RewriteRule ^" + prefix + "/$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
                model.addElement("RewriteRule ^" + prefix + "/(.*)$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
            }
        } else if (jComboBoxRDFTypes.getSelectedItem().toString().equals("N-triples")) {
            if (!model.contains("AddType application/n-triples .nt")) {
                model.insertElementAt("AddType application/n-triples .nt", 4);
            }
            model.addElement(" ");
            model.addElement("# Rewrite rule to serve N-Triples content from the vocabulary URI if requested");
            model.addElement("RewriteCond %{HTTP_ACCEPT} application/n-triples");
            model.addElement("RewriteRule ^" + prefix + "$ " + url + "  [R=303,L]");
            if(!prefix.equals("")){
                model.addElement("RewriteRule ^" + prefix + "/$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
                model.addElement("RewriteRule ^" + prefix + "/(.*)$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
            }
        } else if (jComboBoxRDFTypes.getSelectedItem().toString().equals("N3")) {
            if (!model.contains("AddType text/n3 .n3")) {
                model.insertElementAt("AddType text/n3 .n3", 4);
            }
            model.addElement(" ");
            model.addElement("# Rewrite rule to serve N3 content from the vocabulary URI if requested");
            model.addElement("RewriteCond %{HTTP_ACCEPT} ^.*text/n3.* [OR] ");
            model.addElement("RewriteCond %{HTTP_ACCEPT} \\*/n3");
            model.addElement("RewriteRule ^" + prefix + "$ " + url + "  [R=303,L]");
            if(!prefix.equals("")){
                model.addElement("RewriteRule ^" + prefix + "/$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
                model.addElement("RewriteRule ^" + prefix + "/(.*)$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
            }
        } else if (jComboBoxRDFTypes.getSelectedItem().toString().equals("HTML")) {
//            model.insertElementAt("AddType text/n3 .n3", 4);
            model.addElement(" ");
            model.addElement("# Rewrite rule to serve HTML content from the namespace URI if requested");
            model.addElement("RewriteCond %{HTTP_ACCEPT} text/html [OR]");
            model.addElement("RewriteCond %{HTTP_ACCEPT} text/xml [OR]");
            model.addElement("RewriteCond %{HTTP_ACCEPT} application/xml [OR]");
            model.addElement("RewriteCond %{HTTP_ACCEPT} application/xhtml+xml");
            model.addElement("RewriteRule ^" + prefix + "$ " + url + "  [R=303,L]");
            if(!prefix.equals("")){
                model.addElement("RewriteRule ^" + prefix + "/$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
                model.addElement("RewriteRule ^" + prefix + "/(.*)$ " + jTextFieldSubdirURL.getText() + "  [R=303,L]");
            }

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonCopy;
    private javax.swing.JButton jButtonOpen;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBoxPreventListing;
    private javax.swing.JCheckBox jCheckBoxPreventView;
    private javax.swing.JCheckBox jCheckBoxSubdirAdd;
    private javax.swing.JCheckBox jCheckBoxsubdirEnable;
    private javax.swing.JComboBox<String> jComboBoxRDFTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldAddUpDel;
    private javax.swing.JTextField jTextFieldAdvURL;
    private javax.swing.JTextField jTextFieldDefault;
    private javax.swing.JTextField jTextFieldPURL;
    private javax.swing.JTextField jTextFieldPrefix;
    private javax.swing.JTextField jTextFieldSubdirPrefix;
    private javax.swing.JTextField jTextFieldSubdirURL;
    // End of variables declaration//GEN-END:variables
}

class WhiteYellowCellRenderer extends DefaultListCellRenderer {

    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        Component c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
//            if ( index % 2 == 0 ) {
//                c.setBackground( Color.lightGray );
//            }
//            else {
//                c.setBackground( Color.white );
//            }

        if (value.toString().charAt(0) == '#') {
            // c.setBackground(Color.lightGray);
            setEnabled(false);
        }
        if (value.toString().contains("RewriteRule")) {
             c.setForeground(Color.blue);
            
        }
//System.out.println(value.toString().contains("RewriteRule"));

        return c;
    }
}
